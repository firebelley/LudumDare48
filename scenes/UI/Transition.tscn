[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/wipe_texture.png" type="Texture" id=1]
[ext_resource path="res://scripts/UI/Transition.cs" type="Script" id=2]

[sub_resource type="Animation" id=1]
resource_name = "default"
length = 1.1
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/cutoff")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 0.6, 1.1 ),
"transitions": PoolRealArray( 0.420448, 1, 0.420448, 1 ),
"update": 0,
"values": [ 1.0, 0.0, 0.0, 1.0 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.55 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "EmitTransition"
} ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 1.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform sampler2D wipeTexture;
uniform float cutoff : hint_range(0.0, 1.0);
uniform vec4 color : hint_color;

void fragment() {
	vec4 texColor = texture(TEXTURE, UV);
	float wipeValue = texture(wipeTexture, UV).r;
	
	if (cutoff > wipeValue) {
		COLOR.rgba = vec4(0.0, 0.0, 0.0, 0.0);
	}
	else {
		COLOR.rgba = color;
	}
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/cutoff = 1.0
shader_param/color = Color( 0.0823529, 0.0823529, 0.0823529, 1 )
shader_param/wipeTexture = ExtResource( 1 )

[node name="Transition" type="CanvasLayer"]
layer = 10
script = ExtResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "default"
anims/default = SubResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.0823529, 0.0823529, 0.0823529, 1 )
__meta__ = {
"_edit_use_anchors_": false
}
